# Relatório da Sprint 1 – Análise e Modelagem

**Projeto:** Cálculo de Folha de Pagamento  

**Nome:** Allan Mateus Arruda  
**Nome:** Lara Andrade Carvalho  

---

## 1. Análise do Estudo de Caso e Interpretação do Domínio

O domínio do sistema é o **Cálculo de Folha de Pagamento (Holerite)** no contexto da legislação trabalhista brasileira (CLT). O sistema visa automatizar o processo de apuração dos vencimentos e deduções de um colaborador para gerar o valor líquido de seu salário.  

### Conceitos centrais do domínio:  

- **Funcionário:** A entidade principal, caracterizada por nome, cargo e salário base.  
- **Proventos:** Todos os valores que somam à remuneração, como o salário bruto, adicionais (periculosidade, insalubridade) e benefícios (vale alimentação).  
- **Descontos:** Todos os valores deduzidos da remuneração, incluindo contribuições obrigatórias (INSS, IRRF) e outros descontos (vale transporte, plano de saúde).  
- **Regras de Cálculo:** As lógicas de negócio que transformam os dados brutos (salário, dias trabalhados) em valores calculados, seguindo tabelas e alíquotas governamentais.  
- **Salário Líquido:** O resultado final da operação: **Total de Proventos - Total de Descontos**.  

---

## 2. Identificação de Requisitos do Sistema

- **RF1:** Calcular Salário por Hora.  
- **RF2:** Calcular Adicional de Periculosidade.  
- **RF3:** Calcular Adicional de Insalubridade.  
- **RF4:** Calcular Desconto de Vale Transporte.  
- **RF5:** Calcular Benefício de Vale Alimentação.  
- **RF6:** Calcular Desconto de INSS (seguindo a tabela progressiva).  
- **RF7:** Calcular depósito de FGTS (8% sobre a base de cálculo).  
- **RF8:** Calcular Desconto de IRRF (seguindo a tabela de alíquotas e deduções).  
- **RF9:** Calcular Salário Líquido.  
- **RF10:** Exibir Relatório final com todos os proventos e descontos.  

---

## 3. Cartões CRC (Classe – Responsabilidade – Colaborador)

| Classe                   | Responsabilidades | Colaboradores |
|---------------------------|------------------|---------------|
| **FolhaPagamentoController** | - Receber requisições HTTP POST em `/api/folha-pagamento/calcular`. <br> - Mapear o corpo da requisição (JSON) para `FuncionarioInputDTO`. <br> - Delegar o cálculo para a camada de serviço (`FolhaPagamentoService`). <br> - Retornar o `RelatorioFolhaDTO` com status HTTP 200 OK. | - FolhaPagamentoService <br> - FuncionarioInputDTO <br> - RelatorioFolhaDTO |
| **FolhaPagamentoService** | - Conter toda a lógica de negócio para os cálculos. <br> - Orquestrar a chamada dos métodos de cálculo privados. <br> - Calcular INSS, IRRF, adicionais e benefícios. <br> - Calcular os totais de proventos, descontos e o salário líquido. <br> - Preencher e retornar o objeto `RelatorioFolhaDTO`. | - FuncionarioInputDTO <br> - RelatorioFolhaDTO |
| **FuncionarioInputDTO**   | - Encapsular e transportar os dados de entrada da requisição. <br> - Representar as informações fornecidas pelo usuário. | Nenhum |
| **RelatorioFolhaDTO**     | - Encapsular e transportar os dados de saída (o relatório). <br> - Representar todos os valores calculados a serem exibidos. | Nenhum |

---

## Modelagem das Classes do Frontend (UI)

- **App.jsx:** Componente principal que gerencia o estado da aplicação, realiza a chamada à API backend e distribui os dados para os componentes filhos.  
- **InfoCard.jsx:** Exibe o card superior com as informações básicas do colaborador (nome, cargo, etc.).  
- **DetailsContainer.jsx:** Organiza os cards de "Proventos" e "Descontos". Recebe listas de itens e as renderiza dinamicamente.  
- **SummaryCard.jsx:** Exibe o card inferior de resumo, com os totais de salário bruto, descontos e salário líquido.  
- **Actions.jsx:** Barra inferior com os botões de ação ("Gerar PDF", "Salvar", "Voltar").  

**Interação esperada:**  
Ao carregar a página, o componente `App.jsx` executa uma chamada à API (usando dados de exemplo fixos, por enquanto). Os dados recebidos são armazenados em um estado e passados via props para os componentes filhos, que se renderizam na tela para exibir o relatório completo.  

---

## 6. Planejamento dos Testes Unitários

Os testes unitários focarão na classe **FolhaPagamentoService**, que contém a lógica de negócio crítica.  

### Classe a ser testada: `FolhaPagamentoService`

#### Caso de Teste 1: Cálculo de INSS
- **Cenário 1.1:** Dado um salário que se enquadra apenas na primeira faixa (ex: R$ 1.300,00), quando o método `calcularDescontoINSS` for chamado, então o resultado deve ser **R$ 97,50**.  
- **Cenário 1.2:** Dado um salário que abrange múltiplas faixas (ex: R$ 5.000,00), quando o método `calcularDescontoINSS` for chamado, então o resultado deve ser **R$ 526,20**.  
- **Cenário 1.3:** Dado um salário acima do teto (ex: R$ 8.000,00), quando o método `calcularDescontoINSS` for chamado, então o resultado deve ser o valor máximo de contribuição (**R$ 877,24**).  

#### Caso de Teste 2: Cálculo de IRRF
- **Cenário 2.1:** Dado uma base de cálculo isenta (ex: R$ 1.900,00), quando o método `calcularDescontoIRRF` for chamado, então o resultado deve ser **R$ 0,00**.  
- **Cenário 2.2:** Dado uma base de cálculo tributável (ex: R$ 4.284,22), quando o método `calcularDescontoIRRF` for chamado, então o resultado deve ser **R$ 327,82**.  

#### Caso de Teste 3: Cálculo de Vale Transporte
- **Cenário 3.1:** Dado que o gasto com transporte (ex: R$ 150) é menor que 6% do salário (ex: R$ 180), quando o método `calcularDescontoValeTransporte` for chamado, então o desconto deve ser **R$ 150**.  
- **Cenário 3.2:** Dado que o gasto com transporte (ex: R$ 300) é maior que 6% do salário (ex: R$ 180), quando o método `calcularDescontoValeTransporte` for chamado, então o desconto deve ser **R$ 180**.  

---

## Estrutura do Relatório

1. Análise do Estudo de Caso e Interpretação do Domínio  
2. Identificação de Requisitos do Sistema  
3. Cartões CRC (Classe – Responsabilidade – Colaborador)  
4. Modelagem das Classes do Frontend (UI)  
5. Planejamento dos Testes Unitários  
